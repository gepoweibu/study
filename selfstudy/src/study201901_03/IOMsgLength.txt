//消息长度写入-----------------------------------------------------------------------
//客户端：out.write(int b) 取b的低8位放到输出流，高24被忽略。
//假设length==(16位0)10011001 01110111
//第一步： 右移8位-->00000000(16位0)10011001-->忽略高24位，低8位写进输出流-->10011001(输出流的第一个字节数据)
//第二步：(16位0)10011001 01110111-->忽略高24位，低8位写进输出流-->01110111(输出流的第二个字节数据)

//消息长度读取------------------------------------------------------------------------
//服务端：in.read()读取一个字节的数据以int(32)类型返回(其实有用数据在低8位，高24位都为0)
//第一步：in.read()读取输入流中的第一个字节-->(24位0)10011001
//第二步：in.read()读取输入流中的第二个字节-->(24位0)01110111
//还原length==(16位0)10011001 01110111

//还原两个字节中的数据过程---------------------------------------------------------------
//第一步:第一个字节左移8位----------->(16位0)10011001  00000000
//第二步：加上第二个字节-----------  >        (24位0)  01110111
//计算结果：---------------------->(16位0)10011001  01110111==length

//思考：两个字节表示-->消息length最大为64KB(65536)-->超出的部分会读不到